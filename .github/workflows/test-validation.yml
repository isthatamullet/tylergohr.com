# Tyler Gohr Portfolio - Workflow Validation Test
# Simple test to validate CI/CD pipeline setup

name: 'Test - Workflow Validation'

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'basic'
        type: choice
        options:
          - basic
          - comprehensive

jobs:
  validate-setup:
    name: 'Validate CI/CD Setup'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Validate TypeScript'
        run: npm run typecheck

      - name: 'Validate Linting'
        run: npm run lint

      - name: 'Validate Build'
        run: npm run build

      - name: 'Check Bundle Size'
        run: |
          if [ -d ".next/static" ]; then
            bundle_size=$(du -sk .next/static | cut -f1)
            echo "Bundle size: ${bundle_size}KB"
            
            # Log but don't fail on bundle size (main bundle is different)
            echo "Static assets size: ${bundle_size}KB"
            echo "Main JS bundle size from build output should be ~115KB"
          fi

      - name: 'Validate Health Endpoint'
        run: |
          echo "Health endpoint implementation verified in src/app/api/health/route.ts"
          grep -q "export async function GET" src/app/api/health/route.ts
          echo "âœ… Health endpoint properly implemented"

      - name: 'Validate Docker Configuration'
        run: |
          if [ -f "Dockerfile" ]; then
            echo "âœ… Dockerfile exists"
            grep -q "FROM node:18-alpine" Dockerfile
            echo "âœ… Dockerfile uses correct base image"
            grep -q "standalone" next.config.js
            echo "âœ… Next.js standalone output configured"
          fi

      - name: 'Validate CI/CD Files'
        run: |
          if [ -f ".github/workflows/ci.yml" ]; then
            echo "âœ… CI workflow exists"
          fi
          
          if [ -f ".github/workflows/deploy.yml" ]; then
            echo "âœ… Deploy workflow exists"
          fi
          
          if [ -f "docs/DEPLOYMENT.md" ]; then
            echo "âœ… Deployment documentation exists"
          fi

      - name: 'Summary'
        run: |
          echo "ðŸŽ‰ All validation checks passed!"
          echo "CI/CD pipeline is ready for production use."
          echo ""
          echo "Next steps:"
          echo "1. Set up Google Cloud Project and Service Account"
          echo "2. Configure GitHub Secrets (GCP_PROJECT_ID, GCP_SA_KEY)"
          echo "3. Test with a pull request"
          echo "4. Deploy to production via main branch push"